import pygame
import time
import random

# Initialize pygame
pygame.init()

# Define colors
white = (255, 255, 255)
black = (0, 0, 0)
red = (213, 50, 80)
green = (0, 255, 0)
blue = (50, 153, 213)

# Define screen dimensions
screen_width = 600
screen_height = 400

# Create the screen
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Snake Game")

# Set the clock
clock = pygame.time.Clock()

# Define the font for the score display
font_style = pygame.font.SysFont(None, 30)

def display_score(score):
    """
    Display the score on the screen.
    """
    score_text = font_style.render("Score: " + str(score), True, black)
    screen.blit(score_text, [0, 0])

def draw_snake(snake_block, snake_list):
    """
    Draw the snake on the screen.
    """
    for x in snake_list:
        pygame.draw.rect(screen, green, [x[0], x[1], snake_block, snake_block])

def message(msg, color):
    """
    Display a message on the screen.
    """
    message_text = font_style.render(msg, True, color)
    screen.blit(message_text, [screen_width/6, screen_height/3])

def game_loop():
    """
    Main game loop.
    """
    game_over = False
    game_close = False

    # Set the starting position of the snake
    x1 = screen_width / 2
    y1 = screen_height / 2

    # Set the movement of the snake
    x1_change = 0
    y1_change = 0

    # Set the size of the snake block
    snake_block = 10

    # Create the snake list
    snake_list = []
    length_of_snake = 1

    # Set the food position
    foodx = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0
    foody = round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0

    # Main game loop
    while not game_over:

        # If the game is over, display the game over message
        while game_close == True:
            screen.fill(white)
            message("You lost! Press Q-Quit or C-Play Again", red)
            display_score(length_of_snake - 1)
            pygame.display.update()

            # Wait for the player to choose to quit or play again
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        game_loop()

        # Event handling
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_block
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change
